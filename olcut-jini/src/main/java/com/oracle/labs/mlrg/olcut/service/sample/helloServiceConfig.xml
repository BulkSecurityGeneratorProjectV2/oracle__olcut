<?xml version="1.0" encoding="UTF-8"?>
<!--
A configuration file for the hello service.
-->

<config>
    
    <!--
    A global property for the string that our service will return.  This can
    be overridden by a system property with the same name provided on the 
    command line.
    -->
    <property name="globalMyString" value="Also hello"/>
    
    <!--
    A global property for the Jini group to use when searching for a service
    registry. This can be overridden by a system property with the same name
    provided on the command line.
    -->
    <property name="helloGroup" value="hello"/>
    
    <!--
    A global property for the security policy that the component registry 
    should use. By default, we have a very open security policy.
    This can be overridden by a system property with the same name
    provided on the command line.
    -->
    <property name="securityPolicy" value="/jini/jsk-all.policy"/>

    
    <!-- 
    A component registry that will be used to lookup and register components.
    The registry (or registries) will be found via multicast. You can explicity 
    specify a registry host if you know one, but you should always try multicast
    first!
    -->
    <component name="registry" type="com.oracle.labs.mlrg.olcut.config.remote.ComponentRegistry">
        <propertylist name="groupList">
            <item>${helloGroup}</item>
        </propertylist>
        <property name="securityPolicy" value="${securityPolicy}"/>
        <property name="csDirs" value="${helloDistDir}:${helloDistDir}/lib"/>
        <property name="csPort" value="${csPort}"/>
        <propertylist name="codebaseJars">
            <item>slcut.jar</item>
        </propertylist>
    </component>
    
    <!-- 
    A component for the actual service implementation, which will be 
    exported to the service registry 
    -->
    <component name="hello" type="com.oracle.labs.mlrg.olcut.service.sample.HelloServiceImpl" export="true">
        <property name="myString" value="${globalMyString}"/>
    </component>
    
    <!-- 
    A service starter for the hello service, which will take care of 
    starting the service in a thread and waiting for the service to shut down.
    -->
    <component name="helloStarter" type="com.oracle.labs.mlrg.olcut.service.ConfigurableServiceStarter">
        <propertylist name="serviceComponents">
            <item>hello</item>
        </propertylist>
    </component>

</config>
