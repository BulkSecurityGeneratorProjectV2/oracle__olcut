<?xml version="1.0" encoding="US-ASCII"?>

<!--
    Document   : clientConfig.xml
    Created on : December 17, 2007, 4:16 PM
    Author     : stgreen
    Description:
        A configuration for the client-side components.
-->

<config>
    <property name="showCreations" value="true"/>

    <!-- A registry that won't serve any classes -->
    <component name="registry" type="com.sun.labs.util.props.ComponentRegistry">
        <propertylist name="groupList">
            <item>olcut-test</item>
        </propertylist>
        <property name="securityPolicy" value="src/test/resources/jsk-all.policy"/>
        <property name="lookupTries" value="2"/>
        <property name="lookupWait" value="2"/>
    </component>
    
    <component name="failtest" type="com.sun.labs.util.props.dist.ClientConfigurable">
        <property name="value" value="bar"/>
        <property name="count" value="30"/>
        <property name="comp" value="servercomp"/>
    </component>
    
    <!-- This component has no properties, which means that we're going to want to 
    load it from the lookup service.  We could have also specified importable="true" 
    in the component tag to get this behavior. -->
    <component name="servercomp" type="com.sun.labs.util.props.dist.RegistryConfigurable"/>
    
    <!-- This component has no properties, which means that we're going to want to 
    load it from the lookup service.  We could have also specified importable="true" 
    in the component tag to get this behavior. We'll use the server entries for matching-->
    <component name="servercompWithEntries" type="com.sun.labs.util.props.dist.RegistryConfigurable" entries="serverEntries"/>
    
    <!-- This component has no properties, which means that we're going to want to 
    load it from the lookup service.  We could have also specified importable="true" 
    in the component tag to get this behavior. We'll use the server entries for matching, 
    but they won't actually match -->
    <component name="servercompWithNonMatchingEntries" type="com.sun.labs.util.props.dist.RegistryConfigurable" entries="serverNonMatchingEntries"/>
    
    <component name="servercompWithPartialMatchingEntries" type="com.sun.labs.util.props.dist.RegistryConfigurable" entries="serverNonMatchingEntries"/>
    
    <!-- Configuration entries to use for successful matching -->
    <component name="serverEntries" type="com.sun.labs.util.props.ConfigurationEntries">
        <propertylist name="entries">
            <item>firstEntry</item>
            <item>secondEntry</item>
        </propertylist>
    </component>

    <!-- Configuration entries to use for unsuccessful matching -->
    <component name="serverNonMatchingEntries" type="com.sun.labs.util.props.ConfigurationEntries">
        <propertylist name="entries">
            <item>firstEntry</item>
            <item>thirdEntry</item>
        </propertylist>
    </component>
    
    <!-- Configuration entries to use for partial matching -->
    <component name="serverPartialMatchingEntries" type="com.sun.labs.util.props.ConfigurationEntries">
        <propertylist name="entries">
            <item>firstEntry</item>
        </propertylist>
    </component>

    <component name="firstEntry" type="com.sun.labs.util.props.ConfigurationEntry">
        <property name="data" value="data1"/>
    </component>

    <component name="secondEntry" type="com.sun.labs.util.props.ConfigurationEntry">
        <property name="data" value="data2"/>
    </component>

    <component name="thirdEntry" type="com.sun.labs.util.props.ConfigurationEntry">
        <property name="data" value="data3"/>
    </component>

</config>
